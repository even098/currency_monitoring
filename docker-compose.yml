services:
  postgres:
    image: postgres:17-alpine
    container_name: psgr
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dbnet

  backend:
    build: ./backend
    container_name: backend
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    networks:
      - dbnet
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  bot:
    build: ./bot
    container_name: bot
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    command: python main.py
    env_file:
      - .env
    networks:
      - dbnet
    volumes:
      - ./bot:/app
    depends_on:
      - postgres
      - backend

  redis:
    image: redis:7
    container_name: redis
    restart: always
    command: redis-server
    env_file:
      - .env
    networks:
      - dbnet
    ports:
      - "6379:6379"

  celery:
    build: ./backend
    container_name: celery
    command: "celery -A currency_monitoring worker -l info"
    env_file:
      - .env
    volumes:
      - ./backend:/app
    networks:
      - dbnet
    depends_on:
      - postgres
      - backend
      - redis

  celery-beat:
    build: ./backend
    container_name: celery-beat
    command: "celery -A currency_monitoring beat -l info"
    env_file:
      - .env
    volumes:
      - ./backend:/app
    networks:
      - dbnet
    depends_on:
      - postgres
      - backend
      - redis

networks:
  dbnet:
    driver: bridge

volumes:
  postgres-data:
